name: Build, Push to Private ECR, and Deploy to ECS

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: todo-app
          IMAGE_TAG: latest
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # - name: Get latest Task Definition ARN
      #   id: get-task-def
      #   run: |
      #     TASK_DEF_ARN=$(aws ecs describe-task-definition --task-definition project-two-task --query "taskDefinition.taskDefinitionArn" --region ${{ secrets.AWS_REGION }} --output text)
      #     echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      # - name: Create appspec.yaml
      #   run: |
      #     cat <<EOF > appspec.yaml
      #     version: 0.0
      #     Resources:
      #       - TargetService:
      #           Type: AWS::ECS::Service
      #           Properties:
      #             TaskDefinition: ${{ env.TASK_DEF_ARN }}
      #             LoadBalancerInfo:
      #               ContainerName: todo-app
      #               ContainerPort: 3000
      #     EOF

      # - name: Upload appspec.yaml to S3
      #   run: |
      #     aws s3 cp appspec.yaml s3://todo-app-appspec-bucket/appspec.yaml

      # - name: Trigger Blue-Green Deployment
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name AppECS-project-two-cluster-project-two-service \
      #       --deployment-group-name DgpECS-project-two-cluster-project-two-service \
      #       --revision 'revisionType=S3,s3Location={bucket="todo-app-appspec-bucket",key="appspec.yaml",bundleType="YAML"}' \
      #       --region ${{ secrets.AWS_REGION }}
